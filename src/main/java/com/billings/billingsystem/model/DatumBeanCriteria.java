package com.billings.billingsystem.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DatumBeanCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public DatumBeanCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andDatumIdIsNull() {
            addCriterion("datum_id is null");
            return (Criteria) this;
        }

        public Criteria andDatumIdIsNotNull() {
            addCriterion("datum_id is not null");
            return (Criteria) this;
        }

        public Criteria andDatumIdEqualTo(String value) {
            addCriterion("datum_id =", value, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdNotEqualTo(String value) {
            addCriterion("datum_id <>", value, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdGreaterThan(String value) {
            addCriterion("datum_id >", value, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdGreaterThanOrEqualTo(String value) {
            addCriterion("datum_id >=", value, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdLessThan(String value) {
            addCriterion("datum_id <", value, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdLessThanOrEqualTo(String value) {
            addCriterion("datum_id <=", value, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdLike(String value) {
            addCriterion("datum_id like", value, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdNotLike(String value) {
            addCriterion("datum_id not like", value, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdIn(List<String> values) {
            addCriterion("datum_id in", values, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdNotIn(List<String> values) {
            addCriterion("datum_id not in", values, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdBetween(String value1, String value2) {
            addCriterion("datum_id between", value1, value2, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumIdNotBetween(String value1, String value2) {
            addCriterion("datum_id not between", value1, value2, "datumId");
            return (Criteria) this;
        }

        public Criteria andDatumDateIsNull() {
            addCriterion("datum_date is null");
            return (Criteria) this;
        }

        public Criteria andDatumDateIsNotNull() {
            addCriterion("datum_date is not null");
            return (Criteria) this;
        }

        public Criteria andDatumDateEqualTo(Date value) {
            addCriterionForJDBCDate("datum_date =", value, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("datum_date <>", value, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateGreaterThan(Date value) {
            addCriterionForJDBCDate("datum_date >", value, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("datum_date >=", value, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateLessThan(Date value) {
            addCriterionForJDBCDate("datum_date <", value, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("datum_date <=", value, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateIn(List<Date> values) {
            addCriterionForJDBCDate("datum_date in", values, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("datum_date not in", values, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("datum_date between", value1, value2, "datumDate");
            return (Criteria) this;
        }

        public Criteria andDatumDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("datum_date not between", value1, value2, "datumDate");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdIsNull() {
            addCriterion("max_flow_id is null");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdIsNotNull() {
            addCriterion("max_flow_id is not null");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdEqualTo(Integer value) {
            addCriterion("max_flow_id =", value, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdNotEqualTo(Integer value) {
            addCriterion("max_flow_id <>", value, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdGreaterThan(Integer value) {
            addCriterion("max_flow_id >", value, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_flow_id >=", value, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdLessThan(Integer value) {
            addCriterion("max_flow_id <", value, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdLessThanOrEqualTo(Integer value) {
            addCriterion("max_flow_id <=", value, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdIn(List<Integer> values) {
            addCriterion("max_flow_id in", values, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdNotIn(List<Integer> values) {
            addCriterion("max_flow_id not in", values, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdBetween(Integer value1, Integer value2) {
            addCriterion("max_flow_id between", value1, value2, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andMaxFlowIdNotBetween(Integer value1, Integer value2) {
            addCriterion("max_flow_id not between", value1, value2, "maxFlowId");
            return (Criteria) this;
        }

        public Criteria andStateIsNull() {
            addCriterion("state is null");
            return (Criteria) this;
        }

        public Criteria andStateIsNotNull() {
            addCriterion("state is not null");
            return (Criteria) this;
        }

        public Criteria andStateEqualTo(Integer value) {
            addCriterion("state =", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotEqualTo(Integer value) {
            addCriterion("state <>", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThan(Integer value) {
            addCriterion("state >", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateGreaterThanOrEqualTo(Integer value) {
            addCriterion("state >=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThan(Integer value) {
            addCriterion("state <", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateLessThanOrEqualTo(Integer value) {
            addCriterion("state <=", value, "state");
            return (Criteria) this;
        }

        public Criteria andStateIn(List<Integer> values) {
            addCriterion("state in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotIn(List<Integer> values) {
            addCriterion("state not in", values, "state");
            return (Criteria) this;
        }

        public Criteria andStateBetween(Integer value1, Integer value2) {
            addCriterion("state between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andStateNotBetween(Integer value1, Integer value2) {
            addCriterion("state not between", value1, value2, "state");
            return (Criteria) this;
        }

        public Criteria andResultIsNull() {
            addCriterion("result is null");
            return (Criteria) this;
        }

        public Criteria andResultIsNotNull() {
            addCriterion("result is not null");
            return (Criteria) this;
        }

        public Criteria andResultEqualTo(Integer value) {
            addCriterion("result =", value, "result");
            return (Criteria) this;
        }

        public Criteria andResultNotEqualTo(Integer value) {
            addCriterion("result <>", value, "result");
            return (Criteria) this;
        }

        public Criteria andResultGreaterThan(Integer value) {
            addCriterion("result >", value, "result");
            return (Criteria) this;
        }

        public Criteria andResultGreaterThanOrEqualTo(Integer value) {
            addCriterion("result >=", value, "result");
            return (Criteria) this;
        }

        public Criteria andResultLessThan(Integer value) {
            addCriterion("result <", value, "result");
            return (Criteria) this;
        }

        public Criteria andResultLessThanOrEqualTo(Integer value) {
            addCriterion("result <=", value, "result");
            return (Criteria) this;
        }

        public Criteria andResultIn(List<Integer> values) {
            addCriterion("result in", values, "result");
            return (Criteria) this;
        }

        public Criteria andResultNotIn(List<Integer> values) {
            addCriterion("result not in", values, "result");
            return (Criteria) this;
        }

        public Criteria andResultBetween(Integer value1, Integer value2) {
            addCriterion("result between", value1, value2, "result");
            return (Criteria) this;
        }

        public Criteria andResultNotBetween(Integer value1, Integer value2) {
            addCriterion("result not between", value1, value2, "result");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeIsNull() {
            addCriterion("create_datetime is null");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeIsNotNull() {
            addCriterion("create_datetime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeEqualTo(Date value) {
            addCriterion("create_datetime =", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeNotEqualTo(Date value) {
            addCriterion("create_datetime <>", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeGreaterThan(Date value) {
            addCriterion("create_datetime >", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_datetime >=", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeLessThan(Date value) {
            addCriterion("create_datetime <", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeLessThanOrEqualTo(Date value) {
            addCriterion("create_datetime <=", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeIn(List<Date> values) {
            addCriterion("create_datetime in", values, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeNotIn(List<Date> values) {
            addCriterion("create_datetime not in", values, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeBetween(Date value1, Date value2) {
            addCriterion("create_datetime between", value1, value2, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeNotBetween(Date value1, Date value2) {
            addCriterion("create_datetime not between", value1, value2, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andDatumIdLikeInsensitive(String value) {
            addCriterion("upper(datum_id) like", value.toUpperCase(), "datumId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_datum
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_datum
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}