<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd">
		
    
	<context:component-scan base-package="com.whyse.internet.ihoms2" />
	<!-- <mvc:annotation-driven validator="validator" conversion-service="conversion-service"/> -->
	
	<bean id="utf8Charset" class="java.nio.charset.Charset"
		factory-method="forName">
		<constructor-arg value="UTF-8"/>
	</bean>
 
	<mvc:annotation-driven validator="validator" conversion-service="conversion-service">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg ref="utf8Charset"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<mvc:default-servlet-handler />
	
	<mvc:resources location="/WEB-INF/js/" mapping="/js/**" cache-period="3600" />
	<mvc:view-controller path="/" view-name="redirect:/index" />
	<mvc:view-controller path="/404" view-name="404" />

	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器,顺序执行 -->
	    
	    <!-- 日志log 拦截器 -->
	    <mvc:interceptor>
	    	<mvc:mapping path="/**" />
	       <bean class="com.whyse.internet.ihoms2.interceptor.LogInterceptor"></bean>
	    </mvc:interceptor>
	    
	    <!-- 消息组件 拦截器 -->
	    <mvc:interceptor>
	       <mvc:mapping path="/**" />
	       <bean class="com.whyse.internet.ihoms2.interceptor.MessageInterceptor"></bean>
	    </mvc:interceptor>
	 
		<!-- Token 拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.whyse.internet.ihoms2.interceptor.TokenInterceptor"></bean>
		</mvc:interceptor>
	    
	</mvc:interceptors>


	<bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/velo/"/>
		<property name= "velocityProperties">      
			<props>      
				<prop key="input.encoding">utf-8</prop>      
				<prop key="output.encoding">utf-8</prop> 
				<prop key="velocimacro.library">macro/common.vm</prop>         
			</props>      
		</property>
	</bean>
	 
	<!-- velocity视图解析器，配置调用java的自定义函数 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
		<property name="cache" value="false"/>
		<property name="prefix" value=""/>
		<property name="suffix" value=".html"/>
		<property name="layoutUrl" value="layout/layout.html"/>
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
		<property name="dateToolAttribute"><value>dateTool</value></property>
		<property name="toolboxConfigLocation" value="/WEB-INF/velo/toolbox.xml" />
		<property name="exposeSpringMacroHelpers" value="true"/>
		<property name="order">
			<value>0</value>
		</property>
		<property name="attributesMap">
			<map>
				<entry key="dictCache" value-ref="dictCache" />
			</map>
		</property>
		
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://192.168.50.69:3306/ihoms2_test?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;failOverReadOnly=false" />
		<property name="username" value="ihoms2_test" />
		<property name="password" value="ihoms2_test_pwd" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="select 1 from dual" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
		<property name="dataSource" ref="dataSource" />  
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter"/>
			</list>
		</property>
	</bean>
	
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 --> 
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" > 
		<!-- 指定所上传文件的总大小不能超过10MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
		<property name="maxUploadSize" value="10485760"/>
	</bean>

	<!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到文件上传失败的页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">redirect:/common/error_fileupload.do</prop>
			</props>
		</property>
	</bean>

	<bean id="captchaService" class="com.octo.captcha.service.multitype.GenericManageableCaptchaService">
		<constructor-arg index="0" ref="imageEngine"/>
		<constructor-arg type="int" index="1" value="180"/>
		<constructor-arg type="int" index="2" value="100000"/>
		<constructor-arg type="int" index="3" value="75000"/>
	</bean>
    
	<bean id="imageEngine" class="com.octo.captcha.engine.GenericCaptchaEngine">
		<constructor-arg index="0">
			<list>
				<ref bean="captchaFactory"/>
			</list>
		</constructor-arg>
	</bean>

	<bean id="captchaFactory" class="com.octo.captcha.image.gimpy.GimpyFactory">
		<constructor-arg>
			<ref bean="wordgen"/>
		</constructor-arg>
		<constructor-arg>
			<ref bean="wordtoimage"/>
		</constructor-arg>
	</bean>

	<bean id="wordgen" class= "com.octo.captcha.component.word.wordgenerator.RandomWordGenerator">        
		<!--可选字符-->
		<constructor-arg>
			<value>0123456789</value>
			<!-- <value>abcdefghijklmnopquvwxyz</value> -->
		</constructor-arg>
	</bean>

	<bean id="wordtoimage" class="com.octo.captcha.component.image.wordtoimage.ComposedWordToImage">
		<constructor-arg index="0">
			<ref bean="fontGenRandom"/>
		</constructor-arg>
		<constructor-arg index="1">
			<ref bean="backGenUni"/>
		</constructor-arg>
		<constructor-arg index="2">
			<ref bean="decoratedPaster"/>
		</constructor-arg>
	</bean>

	<bean id="fontGenRandom" class="com.octo.captcha.component.image.fontgenerator.RandomFontGenerator">
		<!--最小字体-->
		<constructor-arg index="0">
			<value>16</value>
		</constructor-arg>
		<!--最大字体-->
		<constructor-arg index="1">
			<value>20</value>
		</constructor-arg>
		<constructor-arg index="2">
			<list>
				<bean class="java.awt.Font">
					<constructor-arg index="0">
						<value>Arial</value>
					</constructor-arg>
					<constructor-arg index="1">
						<value>0</value>
					</constructor-arg>
					<constructor-arg index="2">
						<value>12</value>
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
	</bean>
	<bean id="backGenUni" class="com.octo.captcha.component.image.backgroundgenerator.FunkyBackgroundGenerator">
		<!--背景宽度-->
		<constructor-arg index="0">
			<value>90</value>
		</constructor-arg>
		<!--背景高度-->
		<constructor-arg index="1">
			<value>30</value>
		</constructor-arg>
	</bean>

	<bean id="decoratedPaster" class="com.octo.captcha.component.image.textpaster.DecoratedRandomTextPaster">
		<!--最大字符长度-->
		<constructor-arg type="java.lang.Integer" index="0">
			<value>6</value>
		</constructor-arg>
		<!--最小字符长度-->
		<constructor-arg type="java.lang.Integer" index="1">
			<value>6</value>
		</constructor-arg>
		<!--文本颜色-->
		<constructor-arg index="2">
			<ref bean="colorGen"/>
		</constructor-arg>
		<!--文本混淆-->
		<constructor-arg index="3">
			<list>
				<ref bean="baffleDecorator"/>
			</list>
		</constructor-arg>
	</bean>    
	<bean id="baffleDecorator" class="com.octo.captcha.component.image.textpaster.textdecorator.BaffleTextDecorator">
		<constructor-arg type="java.lang.Integer" index="0">
			<value>1</value>
		</constructor-arg>
		<constructor-arg type="java.awt.Color" index="1">
			<ref bean="colorWrite"/>
		</constructor-arg>
	</bean>
	<bean id="colorGen" class="com.octo.captcha.component.image.color.SingleColorGenerator">
		<constructor-arg type="java.awt.Color" index="0">
			<ref bean="colorBlack"/>
		</constructor-arg>
	</bean>
	<bean id="colorWrite" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>255</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>255</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>255</value>
		</constructor-arg>
	</bean>
	<bean id="colorBlack" class="java.awt.Color">
		<constructor-arg type="int" index="0">
			<value>50</value>
		</constructor-arg>
		<constructor-arg type="int" index="1">
			<value>50</value>
		</constructor-arg>
		<constructor-arg type="int" index="2">
			<value>50</value>
		</constructor-arg>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
		<property name="dataSource" ref="dataSource" />  
		<!--  <property name="mapperLocations" value="classpath:com/whyse/internet/ihoms2/mapping/*Mapper.xml" />  -->
		<property name="mapperLocations">
			<list>
				<value>classpath*:**/*Mapper.xml</value>
			</list>
		</property> 
	</bean>  
  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
		<property name="basePackage" value="com.whyse.internet.ihoms2.dao" />  
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
	</bean>
    
	<!-- JSR303 hibernate Validator定义 -->   
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource"/>
	</bean>
	<bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="basenames">
			<list>
				<value>classpath:ValidationMessage.properties</value>
			</list>
		</property>
	</bean>

</beans>