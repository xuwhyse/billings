<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.1.xsd">
		
    <context:component-scan base-package="com.hundsun.internet.billingsystem.service" />
    <!-- schema/tx要放在后面 -->
	<task:annotation-driven/>
    <!-- 读取配置文件,下面就可以使用  classpath:jdbc.properties-->
     <context:property-placeholder location="classpath:billing.jdbc.properties" />
    
	<!-- 有datasource注入的一般可以直接使用sql语句来执行 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
	    <!--driverClassName驱动有mysql实例提供  -->
		<property name="driverClassName" value="${mysql.driver}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<property name="maxActive"  value="10"   />
        <property name="initialSize"  value="2"  />
        <!-- 默认无限制，避免线程池连接不够用，外部线程请求被无限制挂起，耗尽资源 -->
        <property name="maxWait"  value="60000" />
        <property name="maxIdle"   value="10" />
        <property name="minIdle"    value="5"  />
        <!-- 没有可用连接时触发回收泄露连接:判断标准是多久没有被使用的连接 -->
        <property name="removeAbandoned"  value="true" />
        <property name="removeAbandonedTimeout"  value="120" />
        <property name="logAbandoned" value="true" />
		<!-- 以下三个字段保证回收失效连接，2分钟一次 -->
		<property name="timeBetweenEvictionRunsMillis" value="120000" />
		<property name="minEvictableIdleTimeMillis" value="180000" />
		<property name="numTestsPerEvictionRun"    value="10"  />
		<property name="testWhileIdle" value="true" />
		<property name="validationQueryTimeout"  value="1" />
		<property name="testOnBorrow"  value="false" />
		<property name="validationQuery" value="select 1" />
	</bean>
	
	<!-- jdbcTemplate可以手写sql -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<!-- 这个是事务！！！ -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
		<property name="dataSource" ref="dataSource" />  
	</bean>
	<!-- 使用这个作为annotation-driven -->
	<tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true" />
	
	
	
	<!-- myBatis生成的接口和xml实例化后放到spring容器中作为实现，重要 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
		<property name="dataSource" ref="dataSource" />  
		<!--  <property name="mapperLocations" value="classpath:com/hundsun/internet/ihoms2/mapping/*Mapper.xml" />  -->
		<property name="mapperLocations">
			<list>
				<value>classpath*:**/*Mapper.xml</value>  <!-- 实例化xml然后根据接口于spring关联 -->
			</list>
		</property> 
	</bean>  
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
	    <!-- 接口包 --> 
		<property name="basePackage" value="com.hundsun.internet.billingsystem.dao" />  
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
	</bean>
	
	<!-- =====================以上主要是数据源，spring和mybatis结合=========================== -->
	
</beans>